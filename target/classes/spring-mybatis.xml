<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.sean.questionmanage"/>
	
	<!-- 引入配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 配置连接池,指定数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<!-- 连接驱动 -->
		<property name="driverClassName" value="${dataSource.driver}"/>
		<property name="url" value="${dataSource.url}"/>
		<property name="username" value="${dataSource.username}"/>
		<property name="password" value="${dataSource.password}"/>
 		
 		<!-- 配置初始化大小，最小，最大 -->
 		<property name="initialSize" value="${cpool.initialSize}"/>
 		<property name="minIdle" value="${cpool.minIdle}"/>
 		<property name="maxActive" value="${cpool.maxActive}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${cpool.timeBetweenEvictionRunsMillis}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${cpool.minEvictableIdleTimeMillis}" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${cpool.maxPoolPreparedStatementPerConnectionSize}" />
	</bean>
	
	<!-- spring和Mybatis的完美整合，不需要写Mybatis的映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		
		<!-- 自动扫描目录下mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/sean/questionmanage/mapping/**/*.xml" />
		<!-- 自动扫描目录下实体类文件 -->
		<property name="typeAliasesPackage" value="com.sean.questionmanage.model" />
	</bean>

	<!-- Dao接口所在包名，Spring会自动查找包下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sean.questionmanage.mapping" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
</beans>